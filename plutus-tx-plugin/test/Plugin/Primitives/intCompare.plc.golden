(program
  (let
    (rec)
    (datatypebind
      (datatype
        (tyvardecl Bool (type))

        Bool_match
        (vardecl True Bool) (vardecl False Bool)
      )
    )
    (let
      (nonrec)
      (termbind
        (strict)
        (vardecl ifThenElse (all a (type) (fun (con bool) (fun a (fun a a)))))
        (builtin ifThenElse)
      )
      (termbind
        (strict)
        (vardecl
          lessThanInteger (fun (con integer) (fun (con integer) (con bool)))
        )
        (builtin lessThanInteger)
      )
      (termbind
        (strict)
        (vardecl lessThanInteger (fun (con integer) (fun (con integer) Bool)))
        (lam
          x
          (con integer)
          (lam
            y
            (con integer)
            [
              [ [ { ifThenElse Bool } [ [ lessThanInteger x ] y ] ] True ] False
            ]
          )
        )
      )
      lessThanInteger
    )
  )
)